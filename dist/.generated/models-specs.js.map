"{\"version\":3,\"sources\":[\"/home/lil/fi/POWs/prismary/dist/.generated/models-specs.ts\"],\"sourcesContent\":[\"import { Prisma } from \\\"@prisma/client\\\";\\nimport { UserSchema } from \\\"./UserSchema\\\";\\nimport { ProfileSchema } from \\\"./ProfileSchema\\\";\\nimport { PostSchema } from \\\"./PostSchema\\\";\\nimport { CommentSchema } from \\\"./CommentSchema\\\";\\n\\nexport const modelsSpecs: { [key: string]: any } = {user: {\\n          fields: new Set([\\\"id\\\",\\\"email\\\",\\\"name\\\",\\\"password\\\",\\\"profileId\\\",\\\"profile\\\",\\\"friends\\\",\\\"friendOf\\\",\\\"posts\\\",\\\"comments\\\"]),\\n          relations: {\\\"profile\\\":\\\"profile\\\",\\\"friends\\\":\\\"user\\\",\\\"friendOf\\\":\\\"user\\\",\\\"posts\\\":\\\"post\\\",\\\"comments\\\":\\\"comment\\\"},\\n          schema: UserSchema,\\n          argsTypes: {\\n            findUnique: {} as Prisma.UserFindUniqueArgs,\\n            findUniqueOrThrow: {} as Prisma.UserFindUniqueOrThrowArgs,\\n            findFirst: {} as Prisma.UserFindFirstArgs,\\n            findFirstOrThrow: {} as Prisma.UserFindFirstOrThrowArgs,\\n            findMany: {} as Prisma.UserFindManyArgs,\\n            create: {} as Prisma.UserCreateArgs,\\n            update: {} as Prisma.UserUpdateArgs,\\n            upsert: {} as Prisma.UserUpsertArgs,\\n            delete: {} as Prisma.UserDeleteArgs,\\n            createMany: {} as Prisma.UserCreateManyArgs,\\n            updateMany: {} as Prisma.UserUpdateManyArgs,\\n            deleteMany: {} as Prisma.UserDeleteManyArgs,\\n            count: {} as Prisma.UserCountArgs,\\n            aggregate: {} as Prisma.UserAggregateArgs,\\n            groupBy: {} as Prisma.UserGroupByArgs,\\n          }\\n        },profile: {\\n          fields: new Set([\\\"id\\\",\\\"bio\\\",\\\"isPrivate\\\",\\\"age\\\",\\\"userId\\\",\\\"user\\\"]),\\n          relations: {\\\"user\\\":\\\"user\\\"},\\n          schema: ProfileSchema,\\n          argsTypes: {\\n            findUnique: {} as Prisma.ProfileFindUniqueArgs,\\n            findUniqueOrThrow: {} as Prisma.ProfileFindUniqueOrThrowArgs,\\n            findFirst: {} as Prisma.ProfileFindFirstArgs,\\n            findFirstOrThrow: {} as Prisma.ProfileFindFirstOrThrowArgs,\\n            findMany: {} as Prisma.ProfileFindManyArgs,\\n            create: {} as Prisma.ProfileCreateArgs,\\n            update: {} as Prisma.ProfileUpdateArgs,\\n            upsert: {} as Prisma.ProfileUpsertArgs,\\n            delete: {} as Prisma.ProfileDeleteArgs,\\n            createMany: {} as Prisma.ProfileCreateManyArgs,\\n            updateMany: {} as Prisma.ProfileUpdateManyArgs,\\n            deleteMany: {} as Prisma.ProfileDeleteManyArgs,\\n            count: {} as Prisma.ProfileCountArgs,\\n            aggregate: {} as Prisma.ProfileAggregateArgs,\\n            groupBy: {} as Prisma.ProfileGroupByArgs,\\n          }\\n        },post: {\\n          fields: new Set([\\\"id\\\",\\\"title\\\",\\\"content\\\",\\\"rating\\\",\\\"authorId\\\",\\\"createdAt\\\",\\\"author\\\",\\\"comments\\\"]),\\n          relations: {\\\"author\\\":\\\"user\\\",\\\"comments\\\":\\\"comment\\\"},\\n          schema: PostSchema,\\n          argsTypes: {\\n            findUnique: {} as Prisma.PostFindUniqueArgs,\\n            findUniqueOrThrow: {} as Prisma.PostFindUniqueOrThrowArgs,\\n            findFirst: {} as Prisma.PostFindFirstArgs,\\n            findFirstOrThrow: {} as Prisma.PostFindFirstOrThrowArgs,\\n            findMany: {} as Prisma.PostFindManyArgs,\\n            create: {} as Prisma.PostCreateArgs,\\n            update: {} as Prisma.PostUpdateArgs,\\n            upsert: {} as Prisma.PostUpsertArgs,\\n            delete: {} as Prisma.PostDeleteArgs,\\n            createMany: {} as Prisma.PostCreateManyArgs,\\n            updateMany: {} as Prisma.PostUpdateManyArgs,\\n            deleteMany: {} as Prisma.PostDeleteManyArgs,\\n            count: {} as Prisma.PostCountArgs,\\n            aggregate: {} as Prisma.PostAggregateArgs,\\n            groupBy: {} as Prisma.PostGroupByArgs,\\n          }\\n        },comment: {\\n          fields: new Set([\\\"id\\\",\\\"message\\\",\\\"createdAt\\\",\\\"postId\\\",\\\"authorId\\\",\\\"post\\\",\\\"author\\\"]),\\n          relations: {\\\"post\\\":\\\"post\\\",\\\"author\\\":\\\"user\\\"},\\n          schema: CommentSchema,\\n          argsTypes: {\\n            findUnique: {} as Prisma.CommentFindUniqueArgs,\\n            findUniqueOrThrow: {} as Prisma.CommentFindUniqueOrThrowArgs,\\n            findFirst: {} as Prisma.CommentFindFirstArgs,\\n            findFirstOrThrow: {} as Prisma.CommentFindFirstOrThrowArgs,\\n            findMany: {} as Prisma.CommentFindManyArgs,\\n            create: {} as Prisma.CommentCreateArgs,\\n            update: {} as Prisma.CommentUpdateArgs,\\n            upsert: {} as Prisma.CommentUpsertArgs,\\n            delete: {} as Prisma.CommentDeleteArgs,\\n            createMany: {} as Prisma.CommentCreateManyArgs,\\n            updateMany: {} as Prisma.CommentUpdateManyArgs,\\n            deleteMany: {} as Prisma.CommentDeleteManyArgs,\\n            count: {} as Prisma.CommentCountArgs,\\n            aggregate: {} as Prisma.CommentAggregateArgs,\\n            groupBy: {} as Prisma.CommentGroupByArgs,\\n          }\\n        },};\\n\"],\"names\":[\"modelsSpecs\",\"user\",\"fields\",\"Set\",\"relations\",\"schema\",\"UserSchema\",\"argsTypes\",\"findUnique\",\"findUniqueOrThrow\",\"findFirst\",\"findFirstOrThrow\",\"findMany\",\"create\",\"update\",\"upsert\",\"delete\",\"createMany\",\"updateMany\",\"deleteMany\",\"count\",\"aggregate\",\"groupBy\",\"profile\",\"ProfileSchema\",\"post\",\"PostSchema\",\"comment\",\"CommentSchema\"],\"mappings\":\";;;;+BAMaA;;;eAAAA;;;4BALc;+BACG;4BACH;+BACG;AAEvB,MAAMA,cAAsC;IAACC,MAAM;QAChDC,QAAQ,IAAIC,IAAI;YAAC;YAAK;YAAQ;YAAO;YAAW;YAAY;YAAU;YAAU;YAAW;YAAQ;SAAW;QAC9GC,WAAW;YAAC,WAAU;YAAU,WAAU;YAAO,YAAW;YAAO,SAAQ;YAAO,YAAW;QAAS;QACtGC,QAAQC,sBAAU;QAClBC,WAAW;YACTC,YAAY,CAAC;YACbC,mBAAmB,CAAC;YACpBC,WAAW,CAAC;YACZC,kBAAkB,CAAC;YACnBC,UAAU,CAAC;YACXC,QAAQ,CAAC;YACTC,QAAQ,CAAC;YACTC,QAAQ,CAAC;YACTC,QAAQ,CAAC;YACTC,YAAY,CAAC;YACbC,YAAY,CAAC;YACbC,YAAY,CAAC;YACbC,OAAO,CAAC;YACRC,WAAW,CAAC;YACZC,SAAS,CAAC;QACZ;IACF;IAAEC,SAAS;QACTrB,QAAQ,IAAIC,IAAI;YAAC;YAAK;YAAM;YAAY;YAAM;YAAS;SAAO;QAC9DC,WAAW;YAAC,QAAO;QAAM;QACzBC,QAAQmB,4BAAa;QACrBjB,WAAW;YACTC,YAAY,CAAC;YACbC,mBAAmB,CAAC;YACpBC,WAAW,CAAC;YACZC,kBAAkB,CAAC;YACnBC,UAAU,CAAC;YACXC,QAAQ,CAAC;YACTC,QAAQ,CAAC;YACTC,QAAQ,CAAC;YACTC,QAAQ,CAAC;YACTC,YAAY,CAAC;YACbC,YAAY,CAAC;YACbC,YAAY,CAAC;YACbC,OAAO,CAAC;YACRC,WAAW,CAAC;YACZC,SAAS,CAAC;QACZ;IACF;IAAEG,MAAM;QACNvB,QAAQ,IAAIC,IAAI;YAAC;YAAK;YAAQ;YAAU;YAAS;YAAW;YAAY;YAAS;SAAW;QAC5FC,WAAW;YAAC,UAAS;YAAO,YAAW;QAAS;QAChDC,QAAQqB,sBAAU;QAClBnB,WAAW;YACTC,YAAY,CAAC;YACbC,mBAAmB,CAAC;YACpBC,WAAW,CAAC;YACZC,kBAAkB,CAAC;YACnBC,UAAU,CAAC;YACXC,QAAQ,CAAC;YACTC,QAAQ,CAAC;YACTC,QAAQ,CAAC;YACTC,QAAQ,CAAC;YACTC,YAAY,CAAC;YACbC,YAAY,CAAC;YACbC,YAAY,CAAC;YACbC,OAAO,CAAC;YACRC,WAAW,CAAC;YACZC,SAAS,CAAC;QACZ;IACF;IAAEK,SAAS;QACTzB,QAAQ,IAAIC,IAAI;YAAC;YAAK;YAAU;YAAY;YAAS;YAAW;YAAO;SAAS;QAChFC,WAAW;YAAC,QAAO;YAAO,UAAS;QAAM;QACzCC,QAAQuB,4BAAa;QACrBrB,WAAW;YACTC,YAAY,CAAC;YACbC,mBAAmB,CAAC;YACpBC,WAAW,CAAC;YACZC,kBAAkB,CAAC;YACnBC,UAAU,CAAC;YACXC,QAAQ,CAAC;YACTC,QAAQ,CAAC;YACTC,QAAQ,CAAC;YACTC,QAAQ,CAAC;YACTC,YAAY,CAAC;YACbC,YAAY,CAAC;YACbC,YAAY,CAAC;YACbC,OAAO,CAAC;YACRC,WAAW,CAAC;YACZC,SAAS,CAAC;QACZ;IACF;AAAE\"}"